Moves Class Initializer Parameters
==================================

Before you can run MOVES you need to construct the `activity` and `options` parameters
for the Moves class initializer. Study this document to learn the structure for each.

Specification
-------------

<activity>
  A dictionary:
  
  ::

    {'county':<county_id>,
     'year':<year>,
     'month':<month>,
     'hour':<hour>,
     'day_type':<day_type_id>,
     'age_distr':<age_distr>
     'links':<links>}
	 
	 
<age_distr>: 
  A dictionary:
  
  ::

    {<source_type_id>:<source_type_age_distr>,
     ...,
     <source_type_id>:<source_type_age_distr>}
	 
	 
	 
<source_type_age_distr>
  A dictionary:
  
  ::

    {<age>:<proportion>,
     ...,
     <age>:<proportion>}

  For keys not included, the proportion is assumed to be zero. Proportion
  values should sum to one.


<links>
  A dictionary:
  
  ::

    {<link_id>:<link>,
     ...,
     <link_id>:<link>}

 
<link>
  A dictionary:
  
  ::

    {'road_type':<road_type_id>,
     'length':<length>,
     'volume':<volume>,
     'speed':<speed>,
     'grade':<grade>,
     'source_distr':<source_distr>,
     'opmode_distr':<opmode_distr>}
	 
	 The `'opmode_distr'` key and its value are only required if the value for
	 the `detail` key in the <options> dictionary is `'opmode'`.

<source_distr>
  A dictionary:
  
  ::

    {<source_type_id>:<proportion>,
     ...,
     <source_type_id>:<proportion>}

  For keys not given the proportion is assumed to be zero. Proportions should sum to one.


<opmode_distr>
  A dictionary:
  
  ::

    {<source_type_id>:<source_type_opmode_distr>,
     ...,
     <source_type_id>:<source_type_opmode_distr>}


<source_type_opmode_distr>
  ::

    {<opmode_id>:<proportion>,
     ...,
     <opmode_id>:<proportion>}

  For keys not given the proportion is assumed to be zero. Proportions should sum to one.

<options>
  A dictionary:
  
  ::

    {'detail':<detail>,
     'pollutants':<pollutants>}
	 
  The `'pollutants'` key is optional. If it is not included, then all pollutants 
  will be calculated. 
   
<county_id>
  An integer identifying the county. Find this in the county table of the MOVES database.

<source_type_id>:
  An integer identifying the source type. Find these in the sourceusetype table of the
  MOVES database.

<road_type>
  An integer identifying the road type. Find this in the table road type in the MOVES database.
 
<month>
  An integer for the month (1 = January).

<hour>
  An integer for the hour (0 = midnight).

<day_type_id>
  An integer for the day type. 5 for weekday, and 2 for weekend.

<proportion>
  A float between 0 and 1. 

<link_id>
  An arbitrary positive integer identifying the link

<length>
  A float giving the length of the link in miles. This value (in miles) should always 
  be less than the speed (in mph).

<volume>
  A float giving the volume in vehicles per hour.

<speed>
  A float giving the average speed in miles per hour

<opmode_id>
  One of the following integers: 0,1,11,12,13,14,15,16,21,22,23,24,25,27,28,29,30,
  33,35,37,38,39,40,501. 
 
<detail>
  One of 'average' or 'opmode'.

<pollutants>:
  A list of integers identifying pollutants to be calculated. Find these in the pollutant table in the MOVES database. If the list is empty, no pollutants will be calculated.
  
<age>:
  An integer between 0 and 30 (including end points). Zero means brand-new, and 30
  means 30 years old.  

  
  
Tips
----

- The values for <county>, <day_type>, <source_type_id>, <road_type>, <day_type_id>,
  <opmode_id> and <pollutants> are IDs from the MOVES database. You can find these
  values by browsing the database or in the MOVES documentation.
- The value of <link_id> should not be zero or negative.
- The calculation of many pollutants depends on
  the calculation of other pollutants. To get correct results, all dependencies must
  be included in this list. Dependencies are not documented yet (at least here). To be safe,
  calculate all pollutants by not including the `'pollutants'` key in the <options>
  dictionary. 
- Values of <opmode_id> must be calculated as by the `getOpMode` function in the
  movespy.trajectory module. Note in particular that when speed == 0.0 the opmode is
  always 501, regardless of the pollutant or process you may be interested in.
- If the value of <length> is greater than the value of <speed> the results will
  not be correct. A work around is to adjust the values of <length> and <volume>
  so that their product remains constant and <length> is less than <speed>.











